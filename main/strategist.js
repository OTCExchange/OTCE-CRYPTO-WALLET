// Generated by LiveScript 1.5.0
(function(){
  var iserror, strategist, slice$ = [].slice;
  iserror = require('./iserror.js')('strategist');
  strategist = curry$(function(arg$, value, cb){
    var func, tail;
    func = arg$[0], tail = slice$.call(arg$, 1);
    if (func == null) {
      return cb(null);
    }
    return func(value, function(err, result){
      if (err == null) {
        return cb(err, result);
      }
      strategist(tail, value, function(err, lastResult){
        if (iserror(err, "Last Strategy didn't work")) {
          return cb(err);
        }
        cb(err, lastResult);
      });
    });
  });
  module.exports = strategist;
  function curry$(f, bound){
    var context,
    _curry = function(args) {
      return f.length > 1 ? function(){
        var params = args ? args.concat() : [];
        context = bound ? context || this : this;
        return params.push.apply(params, arguments) <
            f.length && arguments.length ?
          _curry.call(context, params) : f.apply(context, params);
      } : f;
    };
    return _curry();
  }
}).call(this);
